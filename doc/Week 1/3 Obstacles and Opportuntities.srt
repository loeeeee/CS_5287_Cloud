1
00:00:01,385 --> 00:00:01,880
Okay.

2
00:00:01,880 --> 00:00:02,705
In this lecture we're

3
00:00:02,705 --> 00:00:05,708
going to talk about obstacles
and opportunities for cloud computing.

4
00:00:05,708 --> 00:00:11,549
This is really important to understand
what these are and how to overcome these.

5
00:00:11,780 --> 00:00:15,905
And and we're going to talk about
why it's important in computer science

6
00:00:15,905 --> 00:00:20,723
to build architectures that are flexible
so that you can move into these multi

7
00:00:20,723 --> 00:00:24,848
hybrid cloud types of architectures
to overcome some of these obstacles.

8
00:00:25,409 --> 00:00:26,234
So let's cool.

9
00:00:26,234 --> 00:00:28,016
Let's let's I drive in.

10
00:00:28,016 --> 00:00:30,359
There's a lot of

11
00:00:30,359 --> 00:00:32,933
the first one is availability.

12
00:00:32,933 --> 00:00:35,936
There have been very well-documented,

13
00:00:36,827 --> 00:00:39,335
outages, including on my podcast,

14
00:00:39,335 --> 00:00:42,305
the AWS, Thanksgiving outage of 2020,

15
00:00:43,262 --> 00:00:46,067
major outage on AWS.

16
00:00:46,067 --> 00:00:49,862
And, people lost billions of dollars,
during that outage,

17
00:00:50,720 --> 00:00:54,251
when you put everything into a public
cloud, they have issues sometimes.

18
00:00:54,251 --> 00:00:58,442
And even though they've,
they're some of the best in the world for,

19
00:00:58,805 --> 00:01:02,996
you know, managing data centers,
they're they've got a lot of clients.

20
00:01:02,996 --> 00:01:05,240
So things do happen.

21
00:01:05,240 --> 00:01:08,837
It is important to understand
that when they do that,

22
00:01:09,101 --> 00:01:12,995
you need to be able to have a backup plan,
whether it's moving to a different cloud

23
00:01:13,292 --> 00:01:16,064
or a different region in a cloud
or moving on on prem.

24
00:01:16,064 --> 00:01:20,750
So availability issues
is something that's a big deal, right?

25
00:01:22,103 --> 00:01:24,842
When I when
I was a CIO and we ran our data center,

26
00:01:24,842 --> 00:01:29,066
we had a goal of three
nights, 99.9% uptime.

27
00:01:30,155 --> 00:01:33,125
The cloud service
providers are nowhere near that.

28
00:01:33,323 --> 00:01:36,887
In fact, in some organizations
they want 4 or 5 nines uptime.

29
00:01:37,415 --> 00:01:41,177
If you have a, highly critical system,
when you have downtime, it causes

30
00:01:41,540 --> 00:01:45,203
bodily harm or things like that, or,
you know, financial loss.

31
00:01:45,632 --> 00:01:49,163
You can't afford to be
in these public clouds

32
00:01:49,163 --> 00:01:52,826
where they're downtimes are in about 98%.

33
00:01:52,925 --> 00:01:56,588
And in a lot of cases, it means
you're going to have to have a resilient,

34
00:01:58,007 --> 00:02:00,284
architecture to handle those outages.

35
00:02:00,284 --> 00:02:01,934
And what are you going to do with it?

36
00:02:01,934 --> 00:02:04,640
The concepts around cloud computing
should enable you

37
00:02:04,640 --> 00:02:09,128
to increase
that to, 5 or 6 nines very easily.

38
00:02:10,382 --> 00:02:10,976
Okay.

39
00:02:10,976 --> 00:02:13,814
Another thing that we need to worry about,

40
00:02:13,814 --> 00:02:16,058
that people worry about is vendor lock in.

41
00:02:16,058 --> 00:02:20,216
If I'm using, APIs from AWS

42
00:02:20,546 --> 00:02:24,143
and I decide, hey, AWS is tight,
cost me too much,

43
00:02:24,143 --> 00:02:28,895
and I want to move to, Azure,
or I want to move to Oracle or whatever.

44
00:02:29,126 --> 00:02:31,865
Or maybe Oracle's got a new service
I want to use.

45
00:02:31,865 --> 00:02:34,274
If I'm stuck using their APIs

46
00:02:34,274 --> 00:02:37,277
and it's not portable,
I need to be worried about that.

47
00:02:37,277 --> 00:02:37,541
Right.

48
00:02:37,541 --> 00:02:41,138
So it's enticing
because they'll do everything for me.

49
00:02:41,369 --> 00:02:44,372
But at the same time, I then lose my,

50
00:02:45,296 --> 00:02:47,210
ability to move.

51
00:02:47,210 --> 00:02:51,665
Another big cost
and vendor lock in is egress costs.

52
00:02:51,665 --> 00:02:55,394
This is moving data out of the cloud,
which can be very expensive.

53
00:02:55,691 --> 00:03:00,179
So I got to watch all these things
when I get stuck into a cloud.

54
00:03:00,344 --> 00:03:04,766
We call that the Hotel California
from the Eagle Song Hotel California,

55
00:03:04,997 --> 00:03:08,363
which is I can check my data in,
but I can't get it out

56
00:03:08,363 --> 00:03:10,409
and it's too expensive to move it.

57
00:03:10,409 --> 00:03:11,762
You got to be worried about these things.

58
00:03:11,762 --> 00:03:15,491
So you have to watch for these things
in your architectures and in the

59
00:03:15,491 --> 00:03:16,448
way that you deploy.

60
00:03:17,999 --> 00:03:19,385
And as

61
00:03:19,385 --> 00:03:22,454
for other real quick ones,
there's a lot lack of trust

62
00:03:22,751 --> 00:03:26,579
if you have, data that is highly critical.

63
00:03:27,305 --> 00:03:29,615
Maybe it's, you work in government.

64
00:03:29,615 --> 00:03:31,628
Am I going to put my data up?

65
00:03:31,628 --> 00:03:33,443
That's top secret into a cloud?

66
00:03:33,443 --> 00:03:37,205
Probably not, because I don't know
who has access to that.

67
00:03:38,195 --> 00:03:39,779
Who has access to the machines?

68
00:03:39,779 --> 00:03:42,782
Can they walk up to the machine,
plug in a USB key,

69
00:03:42,815 --> 00:03:45,257
or get information off that machine
somehow?

70
00:03:45,257 --> 00:03:47,600
Security threats are a huge deal.

71
00:03:47,600 --> 00:03:50,768
So I've got to work on security,
and we're going to talk a lot

72
00:03:50,768 --> 00:03:54,629
about the shared security model,
in these courses

73
00:03:54,860 --> 00:03:58,457
and what that means and who's responsible
for what on security.

74
00:03:59,942 --> 00:04:03,638
Virtualization is is a good solution.

75
00:04:03,638 --> 00:04:06,773
But there's some downsides to it
that we'll talk about.

76
00:04:06,773 --> 00:04:12,119
Some of those downsides were noisy
neighbor downsides, but also, speed.

77
00:04:12,119 --> 00:04:16,145
There's some speed here for some of the
virtualization techniques were out there.

78
00:04:16,508 --> 00:04:20,435
And then also, since you're not
in full control of all the hardware,

79
00:04:20,435 --> 00:04:23,603
it could be a bad configuration
in firmware or the hardware.

80
00:04:23,900 --> 00:04:26,639
That's not unleashing
all of the power of silicon.

81
00:04:26,639 --> 00:04:29,642
That might be under the covers
that you could take advantage of.

82
00:04:29,675 --> 00:04:31,952
And so those are some other obstacles.

83
00:04:33,470 --> 00:04:34,955
Let's talk about data movement

84
00:04:34,955 --> 00:04:38,420
as another, big, problem
that I need to look at.

85
00:04:39,179 --> 00:04:44,261
Data is very expensive to move around,
so I need to be very careful

86
00:04:44,261 --> 00:04:47,429
where I'm placing my data
and making sure that,

87
00:04:48,353 --> 00:04:51,785
my data is not being shipped
inadvertently around.

88
00:04:52,115 --> 00:04:54,293
Great example of this is a customer.

89
00:04:54,293 --> 00:04:57,296
I won't name who they are
that I've worked with in the past.

90
00:04:57,428 --> 00:05:02,213
They set up a HPC cluster part
in the cloud in part not in the cloud.

91
00:05:02,576 --> 00:05:06,041
And one thing that anyone that works
with HPC clusters know

92
00:05:06,305 --> 00:05:12,179
is that data is king in high performance
computing, so moving data

93
00:05:12,179 --> 00:05:16,634
from the individual nodes into central
repositories is very important.

94
00:05:16,964 --> 00:05:19,340
In moving
data back and forth is important.

95
00:05:19,340 --> 00:05:22,343
They inadvertently burn through
their whole cloud budget by putting

96
00:05:22,508 --> 00:05:26,501
two nodes
in their HPC cluster in the cloud,

97
00:05:26,798 --> 00:05:30,427
and they're very chatty, so they're moving
data back and forth, back and forth.

98
00:05:30,757 --> 00:05:33,661
And it, it it costs a lot of money

99
00:05:33,661 --> 00:05:36,796
and, and burn through their whole year
budget in a month and a half.

100
00:05:37,192 --> 00:05:38,677
So that's that's a big problem.

101
00:05:40,228 --> 00:05:41,251
Here's the other one.

102
00:05:41,251 --> 00:05:42,637
We call it the noisy neighbor problem.

103
00:05:42,637 --> 00:05:45,970
And the best way to explain noisy
neighbor is,

104
00:05:46,564 --> 00:05:51,844
the way that cloud, as we talked in
previous lectures, cloud takes advantage

105
00:05:51,844 --> 00:05:56,233
of multiple people on the same machine
running on the same VMs.

106
00:05:56,926 --> 00:06:01,051
And if one VM is not currently being used,
it's put into,

107
00:06:01,777 --> 00:06:04,318
you know, virtual memory
instead of real memory.

108
00:06:04,318 --> 00:06:07,882
It's still using some resources,
but and maybe it's

109
00:06:07,882 --> 00:06:11,281
not using a lot of CPU, or maybe it's
using a lot of network bandwidth.

110
00:06:11,908 --> 00:06:14,284
These things, the resources

111
00:06:14,284 --> 00:06:17,287
that they're using,
has an impact on your performance.

112
00:06:17,914 --> 00:06:20,884
You see this a lot in,

113
00:06:20,884 --> 00:06:24,811
applications that, have the time
bound to them where there's a quality

114
00:06:24,811 --> 00:06:30,223
of service or SLA that, hey, this job
that I'm running needs to run within 30s,

115
00:06:30,751 --> 00:06:35,041
but the variability could be 10s 30s
a minute and a half.

116
00:06:35,041 --> 00:06:36,328
Whatever the case may be.

117
00:06:36,328 --> 00:06:40,387
That's because a noisy neighbor,
another good way of describing noisy

118
00:06:40,387 --> 00:06:45,304
neighbor is, the difference
between renting in an apartment complex,

119
00:06:45,964 --> 00:06:51,046
a big, huge apartment complex, or owning
your own home in a apartment complex.

120
00:06:51,046 --> 00:06:55,930
If your neighbor above you is being really
loud, playing the music loud, whatever

121
00:06:55,930 --> 00:07:00,319
until the wee hours of the morning,
you pound on the ceiling with your broom.

122
00:07:00,319 --> 00:07:01,573
You call the super.

123
00:07:01,573 --> 00:07:04,180
The super goes,
yeah, I'll tell you what I can say.

124
00:07:04,180 --> 00:07:06,952
Whatever that's like in the cloud.

125
00:07:06,952 --> 00:07:10,252
If I'm at home and I've got ten kids.

126
00:07:10,747 --> 00:07:14,839
So if my kids are being loud, all I have
to do is go and talk to them directly.

127
00:07:15,367 --> 00:07:15,994
And if they

128
00:07:16,984 --> 00:07:19,063
if they're if they're, you know, I'm
trying to record

129
00:07:19,063 --> 00:07:23,056
a podcast or something or lecture
and they're still being loud.

130
00:07:23,287 --> 00:07:25,465
I can restrict them right?

131
00:07:25,465 --> 00:07:28,369
I can say,
you know what, you're in your room

132
00:07:28,369 --> 00:07:30,712
or you know what, go outside and play.

133
00:07:30,712 --> 00:07:33,847
Or you know, send them to a movie
or something like that.

134
00:07:34,111 --> 00:07:36,157
That's the same thing
in your own data center.

135
00:07:36,157 --> 00:07:40,249
If you're running a private cloud,
you can quarantine people.

136
00:07:40,249 --> 00:07:43,351
You can decrease the amount of resources
that they have

137
00:07:43,351 --> 00:07:44,935
because you have access to that.

138
00:07:44,935 --> 00:07:48,565
So that's that noisy neighbor
or predictive performance,

139
00:07:50,578 --> 00:07:53,581
scale, storage scale.

140
00:07:53,581 --> 00:07:54,175
You know what?

141
00:07:54,175 --> 00:07:58,102
This this is a, a big a potential problem.

142
00:07:58,828 --> 00:08:01,237
But for private clouds, it's

143
00:08:01,237 --> 00:08:04,207
an issue if you're running out of, storage

144
00:08:04,405 --> 00:08:07,903
in the cloud,
it seems like there's unlimited storage.

145
00:08:08,167 --> 00:08:12,127
But as you know, as you move into the
petabytes, getting access to that storage

146
00:08:12,127 --> 00:08:15,889
and the cost of that storage, depends
on the different tiers that you have.

147
00:08:15,889 --> 00:08:19,156
So you have to understand your storage.

148
00:08:19,156 --> 00:08:22,159
You can't just say,
I'll just throw it all into an S3 bucket.

149
00:08:22,159 --> 00:08:25,162
You got to be smart about it,
because you want to make sure that you're,

150
00:08:25,657 --> 00:08:30,244
getting the, the most value
out of what you're doing,

151
00:08:30,244 --> 00:08:33,412
that you're not storing things
in expensive storage

152
00:08:33,412 --> 00:08:35,524
when it can go in a glacial
storage type of thing.

153
00:08:38,923 --> 00:08:41,860
Distributed systems and debugging.

154
00:08:41,860 --> 00:08:44,764
This is very important.

155
00:08:44,764 --> 00:08:46,678
When you are working on

156
00:08:46,678 --> 00:08:49,681
distributed systems
and trying to debug systems,

157
00:08:51,199 --> 00:08:53,839
it's much harder to figure out

158
00:08:53,839 --> 00:08:57,865
where the bugs are residing,
in which application or microservice

159
00:08:57,865 --> 00:09:02,188
they're residing in, or is it a problem
in data, or is there a network pick up?

160
00:09:02,188 --> 00:09:04,102
All these things have a play.

161
00:09:04,102 --> 00:09:07,105
So it is very, very important

162
00:09:08,128 --> 00:09:10,108
that you put in place,

163
00:09:10,108 --> 00:09:13,771
different techniques
for distributed distributed

164
00:09:13,771 --> 00:09:18,193
bugging and distributed system
monitoring, logging and things like that.

165
00:09:18,655 --> 00:09:22,351
And reproducing bugs at scale
can be a real hard thing.

166
00:09:22,615 --> 00:09:26,542
And, and this is something
that, takes time to learn how to do.

167
00:09:26,806 --> 00:09:30,436
And hopefully, through these lectures,
we'll, we'll learn some techniques

168
00:09:30,436 --> 00:09:33,439
that will help.

169
00:09:34,462 --> 00:09:37,465
Instance,
scaling up and down can be hard at times.

170
00:09:37,597 --> 00:09:42,118
Cloud makes it much easier,
but it can take time for VMs to spin up.

171
00:09:42,118 --> 00:09:43,735
It could take 4 or 5 minutes.

172
00:09:44,692 --> 00:09:47,926
And if
I get a big huge burst in my website,

173
00:09:49,081 --> 00:09:51,127
you know, I got to be able to handle that.

174
00:09:51,127 --> 00:09:55,384
So, there are some techniques
that we can use, to do this.

175
00:09:56,506 --> 00:09:59,608
If you're in your own data center
running this,

176
00:09:59,806 --> 00:10:03,898
this could be problematic as well
if I don't have any more servers to do it.

177
00:10:04,162 --> 00:10:08,815
So this is where that multi hybrid cloud
comes in where I can burst into the cloud.

178
00:10:08,815 --> 00:10:11,950
I have some things ready to go
and I'm a little preemptive.

179
00:10:12,379 --> 00:10:17,098
This is a another trade off
between cost and response.

180
00:10:17,263 --> 00:10:20,398
And responsiveness
of of your applications.

181
00:10:23,632 --> 00:10:25,018
All right.

182
00:10:25,018 --> 00:10:27,724
Sharing resources.

183
00:10:27,724 --> 00:10:31,849
Here's another, another problem
that we've seen in the past.

184
00:10:32,113 --> 00:10:35,116
If I'm sharing resources, or

185
00:10:35,512 --> 00:10:38,812
there can be some,
some issues around data.

186
00:10:39,076 --> 00:10:42,145
And if there are issues in the cloud, like

187
00:10:42,145 --> 00:10:46,270
if Amazon has an outage,
who's liable for that?

188
00:10:46,699 --> 00:10:47,029
Right.

189
00:10:48,019 --> 00:10:50,890
And what
kind of agreement do you have with them?

190
00:10:50,890 --> 00:10:53,464
Especially if it's a critical system.

191
00:10:53,464 --> 00:10:54,949
You know, what's going to happen there.

192
00:10:54,949 --> 00:10:58,579
So you are remember, you are sharing
resources with someone else.

193
00:10:58,843 --> 00:11:03,429
So in in major outages,
Delta has had these.

194
00:11:03,429 --> 00:11:07,983
You know, I just had these where they're
in the cloud whose reputation is soiled.

195
00:11:08,148 --> 00:11:10,986
If AWS goes down and united

196
00:11:10,986 --> 00:11:15,276
using them or target
have a big target using Amazon stuff.

197
00:11:15,276 --> 00:11:19,170
But or Azure
if that goes down and all of a sudden

198
00:11:19,170 --> 00:11:23,097
your website's down,
who's whose reputation is at stake.

199
00:11:23,526 --> 00:11:26,463
So you you can architect things
so that things stay up,

200
00:11:26,463 --> 00:11:28,179
but you've got to architect things.

201
00:11:28,179 --> 00:11:31,182
It just doesn't happen automatically.

202
00:11:31,446 --> 00:11:33,954
Software licensing has been an issue

203
00:11:33,954 --> 00:11:37,353
in, and an obstacle in adopting cloud.

204
00:11:38,145 --> 00:11:41,181
As I spin up more and more instances,
the whole licensing software

205
00:11:41,181 --> 00:11:43,557
licensing paradigm has shifted.

206
00:11:43,557 --> 00:11:46,230
And how do I how do I licensing?

207
00:11:46,230 --> 00:11:47,715
Do I license it per VM?

208
00:11:47,715 --> 00:11:49,695
Do I license it per physical device?

209
00:11:49,695 --> 00:11:52,401
There's a whole bunch of things
that have happened in this space

210
00:11:52,401 --> 00:11:54,711
and continue to change over time.

211
00:11:56,196 --> 00:11:56,592
All right.

212
00:11:56,592 --> 00:11:58,506
So let's talk about,

213
00:11:58,506 --> 00:12:02,037
these obstacles that we've come up with
and some opportunities.

214
00:12:02,037 --> 00:12:02,598
Right.

215
00:12:02,598 --> 00:12:05,766
So availability and business continuity
I'm gonna

216
00:12:05,997 --> 00:12:07,284
I'm going to use multiple clouds.

217
00:12:07,284 --> 00:12:10,551
So this is the multi hybrid
cloud concept data

218
00:12:10,551 --> 00:12:13,554
lock in getting my data stuck in things.

219
00:12:13,653 --> 00:12:14,082
All right.

220
00:12:14,082 --> 00:12:16,359
Let's work on a data architecture.

221
00:12:16,359 --> 00:12:19,197
Let's use some standard APIs.

222
00:12:19,197 --> 00:12:21,276
So that I'm not locked into one vendor

223
00:12:21,276 --> 00:12:25,071
that I can move
my workloads around moving data around.

224
00:12:25,071 --> 00:12:28,074
I've got to, understand and deploy that

225
00:12:28,338 --> 00:12:31,374
data confidentiality and auditability

226
00:12:31,935 --> 00:12:35,136
make sure you are, deploying encryption.

227
00:12:35,400 --> 00:12:37,479
Make sure that you have the keys.

228
00:12:37,479 --> 00:12:39,426
Not that AWS has the keys.

229
00:12:39,426 --> 00:12:43,452
They will they will gladly create the keys
for you and keep them.

230
00:12:43,452 --> 00:12:45,564
You should be doing that yourself.

231
00:12:45,564 --> 00:12:48,666
Make sure that you're setting up
VLANs and firewalls and all that stuff.

232
00:12:48,930 --> 00:12:51,933
You're still responsible for this, stuff.

233
00:12:52,263 --> 00:12:55,299
Don't rely on the cloud
service providers for for all of that.

234
00:12:56,784 --> 00:12:59,787
Believe it or not, sometimes moving data,

235
00:13:01,041 --> 00:13:03,780
it's cheaper to just Fedex

236
00:13:03,780 --> 00:13:06,123
data, which sounds horrible,

237
00:13:06,123 --> 00:13:09,126
but if I have terabytes of data

238
00:13:09,753 --> 00:13:13,515
or petabytes of data, I can store them
on terabyte drives and ship them

239
00:13:14,142 --> 00:13:18,564
from one data center to another,
sometimes faster than using the internet.

240
00:13:18,564 --> 00:13:20,874
Which is crazy, but that does happen.

241
00:13:20,874 --> 00:13:22,986
There's lots of different techniques
for data.

242
00:13:22,986 --> 00:13:24,867
Data transfer bottlenecks.

243
00:13:24,867 --> 00:13:26,385
Let's take a look at all of them.

244
00:13:26,385 --> 00:13:29,916
What should be interesting,
performance unpredictability.

245
00:13:30,081 --> 00:13:33,645
If you have workloads that you need highly
predictable performance,

246
00:13:34,008 --> 00:13:38,628
look at running in private cloud
for those and public cloud for others.

247
00:13:39,024 --> 00:13:40,377
Right.

248
00:13:40,377 --> 00:13:43,380
And this will
this will give you, the ability

249
00:13:43,380 --> 00:13:47,142
to fine tune your performance
on, on those clouds.

250
00:13:48,957 --> 00:13:49,386
All right.

251
00:13:49,386 --> 00:13:52,158
Scalable storage.

252
00:13:52,158 --> 00:13:55,623
We've got to talk about, data
architectures and storage architectures.

253
00:13:55,623 --> 00:13:58,956
There's a whole set of lectures,
based on that.

254
00:13:59,616 --> 00:14:00,639
Let's look at,

255
00:14:01,827 --> 00:14:04,005
debugging large distributed systems,

256
00:14:04,005 --> 00:14:07,206
logging, auditability
all that will be important.

257
00:14:07,899 --> 00:14:10,902
Including, repeatability.

258
00:14:11,298 --> 00:14:13,872
Is, is, very important.

259
00:14:13,872 --> 00:14:16,611
Also look at, scaling quickly.

260
00:14:16,611 --> 00:14:21,693
There's lots of things that were invented
on autoscaling and preemptive scaling,

261
00:14:22,716 --> 00:14:26,379
preemptive scaling, that are possibilities

262
00:14:26,379 --> 00:14:29,547
there that we can look at
and then, reputation.

263
00:14:30,834 --> 00:14:31,956
You know what?

264
00:14:31,956 --> 00:14:34,629
This one's
this was going to be a tough one, right?

265
00:14:34,629 --> 00:14:37,368
Because if you put all your eggs
in one basket

266
00:14:37,368 --> 00:14:40,965
and that basket goes down and you go down,
this can be a big problem.

267
00:14:41,295 --> 00:14:41,856
Right?

268
00:14:41,856 --> 00:14:44,100
And we talked a little bit about software
licensing.

269
00:14:44,100 --> 00:14:47,763
So lots of obstacles,
lots of great opportunities.

270
00:14:49,083 --> 00:14:51,558
Especially for cloud architects.

271
00:14:51,558 --> 00:14:54,198
This is where you earn your keep.
